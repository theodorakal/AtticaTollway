# Attica-Tollway
Η εργασια υλοποιηθηκε απο τις φοιτητριες Θεοδώρα Καλαμίδα (sdi2000061) και Μυρτώ Παράφορου (sdi2000261).

Η εργασια ειναι χωρισμενη σε 11 αρχεία, ένα πηγαίο και ένα header file για κάθε κλάση, και ένα πηγαίο αρχείο που περιέχει την main.
Επισης υπαρχει ενα makefile που κανει την συνδεση των αρχειων. Ο κωδικας τρεχει με τις παρακατω εντολες:
make attica_tollway
./attica_tollway 10 10 5 0.4 (για παράδειγμα)

Η υλοποιηση περιεχει τις παρακατω κλασεις:
-class Attica_tollway (αττικη οδος)
-class Segment
-class Entrance
-class Toll
-class e_toll (ηλεκτρονικα διοδια, υποκλαση της class Toll)
-class collector_toll (διοδια με εισπρακτορα, υποκλαση της class Toll)
-class Vehicle



## Attica Tollway ##

Η αττικη οδος ειναι ενας αυτικινητοδρομος ο οποιος αποτελειται απο τμηματα. Το καθε τμημα περιεχει μια εισοδο 
στην αρχη του, ωστε να μπορουν να εισελθουν οχηματα που βρισκονται εκτος αυτοκινητοδρομου. Ολες οι 
εισοδοι εχουν μια σειρα διοδιων, πισω απο τα οποια περιμενουν οχηματα για να εισελθουν στην αττικη οδο.
Αυτή η σειρά διοδίων περιέχει ηλεκτρονικά διόδια και διόδια με εισπράκτορα.
Επισης καθε τμημα εχει και μια εξοδο ωστε να μπορουν τα οχηματα να εξλεθουν απο την αττικη οδο.
Η εισοδος μαζι με τα διοδια, την εξοδο και την ενωση με το επομενο τμημα (αν υπαρχει), αποτελουν οπτικα εναν 
κομβο διελευσης οχηματων. Η εννοια του κομβου δεν υλοποιειται στην εργασια μας βεβαια, ουτε και η εννοια της 
εξοδου. Διαισθητικά, η είσοδος ενός τμήματος βρίσκεται στην αρχή του, και η έξοδος στο τέλος του.


------------------------------------------Attica_Tollway-----------------------------------------------------------------

H αττικη οδος περιεχει αρχικα εναν πινακα με δεικτες σε segments, μεγεθους Nsegs και το αντικείμενο num_of_segments
το οποίο αρχικοποιείται με την τιμή Nsegs. Oι total_num_of_vehicles και segments είναι accessors που απλά επιστρέφουν
το πλήθος των αυτοκινήτων που περιέχει ο αυτοκινητόδρομος και το πλήθος των τμημάτων του αυτοκινητοδρόμου αντίστοιχα.
H συναρτηση operate της αττικης οδου αποτελει εναν κυκλο της προσομοιωσης και και καλει την operate του καθε τμηματος 
απο το τελευταίο έως το πρώτο.

------------------------------------------Segment-------------------------------------------------------------------
Το καθε τμημα εχει εναν δεικτη στο προηγουμενο και στο επομενο του τμήμα, τον ακέραιο segment_no που εκφράζει την 
θέση του κάθε τμήματος σε σχέση με τα υπόλοιπα, με τον αριθμό 0 να χαρκτηρίζει το θεωρητικά πρώτο τμήμα του
αυτοκινητοδρόμου και το τελευταίο το nsegs-1, δηλαδή ότι ειναι το n-οστο κατα σειρα οχημα και τον double αριθμό percent 
ο οποίος αρχικοποιείται με το όρισμα εισοδου, το ποσοστο των οχηματων που θα μπαινουν σε ετοιμοτητα σε καθε κυκλο προσομοιωσης. 
Επιπλέον, η κλάση Segment έχει ως αντικείμενο έναν δείκτη προς την είσοδό της, τον ακεραιο αριθμό vehicle_capacity 
που εκφράζει την μέγιστη χωρητικότητα αυτοκινήτων του κάθε τμήματος και μία λίστα από τα αυτοκίνητα που περιέχει 
το τμήμα σε κάθε κύκλο προσομοίωσης (operate) (δεν παιζει ρολο η σειρα των οχηματων μεσα στη λιστα).

Στο public μέρος της κλάσης Segment περιέχει εκτός από τις μεθόδους, και τους setters 
set_previous και set_next, οι οποίοι χρησιμοποιούνται μόνο από τον constructor της Attica_Tollway με σκοπό να αποδόσουν
τις αντίστοιχες τιμές στα αντικείμενα previous και next του κάθε τμήματος.
Επιπλέον, ορίσαμε και τον accessor get_no_of_vehicles ο οποίος απλά επιστρέφει τον αριθμό των αυτοκινήτων που 
υπάρχουν σε κάθε κατάσταση. Επιλέξαμε οι συναρτήσεις pass και enter να έχουν τύπο επιστροφής μία boolean flag
την οποία ελέγχουμε μέσα στην operate, με σκοπό να γίνουν οι αντίστοιχες εκτυπώσεις που ζητώνται, δηλαδή 
αν επιστρέφεται 1 (και στις δύο), θεωρούμε ότι υπάρχουν καθυστερήσεις και αν επιστρέφουν και οι δύο 0, 
κάνουμε πάλι την αντίστοιχη ενδεδειγμένη εκτύπωση.

Τέλος, η μέθοδος operate του τμήματος, που αναφέρθηκε και παραπάνω, σε κάθε αλλαγή της κατάστασης της αττικής οδού
καλεί τις συναρτήσεις exit, pass, και enter με την συγκεκριμένη σειρά, αλλά και τις συναρτήσεις της εισόδου του τμήματος
reinitialize, refill_tolls και την set_ready του τμήματος. H reinitialize κάνει τις απαραίτητες αλλαγές στις αντίστοιχες 
μεταβλητές της εισόδου που εκφράζουν την κατάστασή της σε έναν κύκλο operate και η refill_tolls παράγει νέα αυτοκίνητα και 
ξαναγεμίζει τα μόλις σχεδόν (ή και εντελώς) αδειασμένα διόδια. Περισσότερη ανάλυση πάνω στον λόγο που αποφασίσαμε να κάνουμε 
αυτές τις διαδικασίες εκτός της operate της entrance θα γίνει πιο κάτω, όταν θα αναφερθουμε στην κλάση της εισόδου.
Η segment::set_ready καθιστα σε ετοιμοτητα για τον επομενο κυκλο προσομοιωσης ενα ποσοστο percent των οχηματων στο τμημα.

Αναλυτικα οι exit, pass enter:

H συναρτηση exit διασχιζει την λιστα των οχηματων και ελεγχει εαν το εκαστοτε αυτοκινητο ειναι σε ετοιμοτητα και ο κομβος εξοδου ειναι 
ο ιδιος κατα σειρα με το τμημα στο οποιο βρισκεται το οχημα (δηλαδη αν το οχημα βρισκεται πχ στο τμημα 5 και εχει προορισμο την εξοδο 5), 
τοτε το οχημα βγαινει απο την λιστα των οχηματων του τμηματος δηλαδη βγαινει απο την αττικη οδο (συνεπώς καταστρέφεται).

Η συναρτηση pass εχει μια boolean μεταβλητη didnt_pass την οποια και επιστρεφει. Η μεταβλητη αυτη γινεται 1 εαν εστω και ενα 
οχημα απο αυτα που ειναι σε ετοιμοτητα στο εκαστοτε τμημα δεν καταφερει να περασει στο επομενο. Η συναρτηση διατρεχει την 
λιστα των οχηματων. Εαν καποιο απο τα αυτοκινητα ειναι σε ετοιμοτητα και ο προορισμος του ειναι καποια εξοδος στο διαστημα 
[αριθμος_εκαστοτε_τμηματος, nsegs], τοτε κανει τον εξης ελεγο: Αν το μεγεθος της λιστας του επομενου τμηματος (segment 
*next) ειναι μικροτερο απο την χωρητικοτητα του επομενου τμηματος, δηλαδη με απλα λογια, αν το επομενο τμημα χωραει οχηματα, 
τοτε το οχημα βγαινει απο την λιστα του τρεχοντος τμηματος και μπαινει στην λιστα του επομενου τμηματος. Επειτα βγαζει το 
οχημα πλεον απο την κατασταση ετοιμοτητας μέσω της change_state_of_vehicle  (η change_state_of_vehicle 
θα εξηγηθει παρακατω). Αν ομως διαπιστωθει οτι το οχημα που θελει να περασει στο επομενο τμημα δεν χωραει σε αυτο, τοτε η 
didnt_pass γινεται αληθης αρα σημαινει οτι τουλαχιστον ενα αυτοκινητο δεν καταφερε να περασει. Δεν μας ενδιαφερει το ποσα 
οχηματα δεν καταφεραν να περασουν, απλα το οτι συνεβη. Επομενως εαν η pass επιστρεψει 1 αυτο σημαινει οτι υπαρχουν 
καθυστερησεις στο τμημα αυτό (δεν αλλάζει η κατάσταση ετοιμότητας των οχημάτων που δεν κατάφεραν να περάσουν).

Η συναρτηση enter εχει μια boolean μεταβλητη delays την οποια και επιστρεφει.
Η συνάρτηση αποτελείται από μια λουπα που κανει το εξης: ενοσω χωρανε ακομα οχηματα στο τμημα, βαζει οχηματα στο τμημα μεσω της 
entrance::operate(θα εξηγηθει παρακατω, επιστρεφει εναν δεικτη σε οχημα) και καλει και την change_state_of_vehicle για το 
καθε οχημα που μπαινει μεσα στο τμημα. Σε καθε λουπα καλειται πρωτα η check_tolls (θα εξηγηθει παρακατω), η οποια ελεγχει 
εαν υπαρχουν ακομα ανοιχτα ή μη-αδεια διοδια για να δωσουν οχηματα. Αφού γίνει η μεταφορα οχηματων απο 
την εισοδο στο τμημα, γινεται ελεγχος εαν το συνολο των οχηματων που πέρασαν από την είσοδο είναι μικροτερο από 
το πλήθος εκείνων που αρχικά περίμεναν στην είσοδο για να περάσουν. Τοτε, αν αυτό ισχύει το delays γινεται αληθες 
και σημαινει οτι υπαρχουν καθυστερησεις στην εκαστοτε εισοδο. 

Η set_ready θέτει σε ετοιμότητα τα αυτοκίνητα του segment στη νέα κατάστασή, σύμφωνα πάντα με το percent, και καλείται
στο τέλος τη operate.
-----------------------------------------------------------------------------------------------------------------------------


------------------------------------------Entrance---------------------------------------------------------------------------
Η entrance έχει έναν ακέραιο entrance_no, που μας δείχνει ότι είναι η n-οστή είσοδος στη σειρά, το num_of_tolls είναι το 
πλήθος των διοδίων που έχει η είσοδος, και αντίστοιχα το number_of_e_tolls και number_of_collector_tolls, είναι το πλήθος 
των ηλεκτρονικών διοδίων και των διοδίων με εισπράκτορα που έχει. Επιπλέον, περιέχει έναν πίνακα από δείκτες στα διόδια από 
τα οποία αποτελείται και το last_toll, το οποιο δηλωνει ποιο κατα σειρα ηταν το τελευταιο διοδιο που εξυπηρετησε. Το 
last_toll αρχικοποιείται με -1 (-1 σημαινει οτι δεν υπαρχει προηγουμενο διοδιο που εξυπηρετησε) και είναι πάντα -1 
πρωτού κληθεί η enter του segment και γίνεται πάλι -1 αφού κληθεί η reinitilize της εισόδου, για τον επομενο κυκλο προσομοιωσης.  

Στο public μέρος της κλάσης της εισόδου, υπαρχει η vehicles_waiting που επιστρέφει τον αριθμό ολων των οχηματων ολων των διοδιων 
που περιμένουν στην είσοδο για να μπουν μέσα στον αυτοκινητόδρομο, χρησιμοποιείται στην segment::enter.

Η συναρτηση entrance::operate εχει τυπο επιστροφης vehicle * και επιστρεφει δεικτη σε όχημα. Η δουλεια που κανει ειναι 
να παει στο διοδιο last_toll + 1 δηλαδη στο επομενο απο το τελευταιο διοδιο που εξυπηρετησε, να δει αν το διοδιο ειναι 
διαθεσιμο (η διαθεσιμοτητα θα εξηγηθει παρακατω στην class toll). Αν ειναι διαθεσιμο το διοδιο, παιρνει απο αυτο το πρωτο 
κατα σειρα οχημα της λιστας πισω απο το διοδιο μεσω της συναρτησης toll::pass_tolls (επιστρεφει και αυτη vehicle *, επισης 
θα εξηγηθει παρακατω). Εαν το διοδιο που θα ψαξει ειναι μη διαθεσιμο, η operate θα επιστρεψει NULL. H entrance::operate 
λοιπον, που χρησιμοποιειται στην segment::enter, παίρνει εναν εναν τους δεικτες των οχηματων απο τα διοδια και τους δίνει
στα τμηματα.

H συναρτηση reinitialize καλει την toll::change_state (θα εξηγηθει παρακατω) για ολα τα διοδια της τρεχουσας εισοδου, και 
αρχικοποιει το index last_toll με -1 για τον επομενο κυκλο προσομοιωσης.

Η συναρτηση check_tolls εχει πολυ συγκεκριμενη χρησιμοτητα και καλειται μονο στην μεθοδο segment::enter. Η δουλεια της ειναι 
η εξης: αθροιζει τον αριθμο των αδειων διοδιων (αν υπαρχουν αδεια διοδια) μαζι με τον αριθμο των μη διαθεσιμων διοδιων (αν 
υπαρχουν μη διαθεσιμα διοδια). Αν αυτο το αθροισμα ειναι ισο με τον συνολικο αριθμο των διοδιων, αυτο σημαινει 3 πραγματα:
-ειτε οτι ολα τα διοδια ειναι μη διαθεσιμα, 
-ειτε οτι ολα τα διοδια ειναι αδεια, 
-η οτι καποια ειναι μη διαθεσιμα και καποια αδεια 
Οπότε κανενα διοδιο δεν ειναι ευκαιρο να δωσει οχηματα.
Οπως εξηγηθηκε και παραπανω, η segment::enter εκτελει μια λουπα και ενοσω υπαρχει ακομα διαθεσιμος χωρος στο τμημα, ζηταει 
αυτοκινητα απο την entrance::operate. Εαν σταματησουν ολα τα διοδια να λειτουργουν για εναν απο τους 3 παραπανω λογους αλλα 
ακομα υπαρχει διαθεσιμος χωρος στο τμημα, θα γινει infinite loop γιατι εντος της while θα αναζητωνται αιωνιως οχηματα. Η 
check_tolls επομενως καλειται σε καθε loop και εαν δωσει false, δηλαδη δωσει το σημα οτι τα διοδια αυτης της εισοδου δεν 
μπορουν να δωσουν αλλα οχηματα, το loop σταματαει.

Η συναρτηση refill_tolls καλει την toll::generate_vehicles (θα εξηγηθει παρακατω) για ολα τα διοδια της τρεχουσας εισοδου. 
Πρακτικα, μετα απο καθε κυκλο exit-pass-enter, ξαναγεμιζει ενα ενα τα διοδια με αυτοκινητα που περιμενουν να εισελθουν στον 
αυτοκινητοδρομο.
-----------------------------------------------------------------------------------------------------------------------------


------------------------------------------Toll-------------------------------------------------------------------------------
Η κλαση toll ειναι μια abstract κλαση η οποια εχει δυο παραγωγες κλασεις μεσω κληρονομικοτητας, την κλαση e_toll 
(ηλεκτρονικο διοδιο) και την κλαση collector_toll (διοδιο με εισπρακτορα). Η διαφορα αναμεσα στις 2 υποκλασεις ειναι οτι ο 
ρυθμος διελευσης οχηματων (transit_rate) των ηλεκτρονικων διοδιων ειναι διπλασιος απο αυτα με εισπρακτορα.
Ολες οι υπολοιπες private μεταβλητες που χρησιμοποιουν τα 2 ειδων διοδια ειναι κοινες, γι'αυτο και βρισκονται στο protected 
μερος της class toll. 

H toll περιεχει μια λιστα με δεικτες σε οχηματα τα οποια ειναι αυτα που περιμενουν να μπουν στην αττικη οδο στο καθε διοδιο. 
Εχει εναν δεικτη στην αττικη οδο, το vehicles_passed που ειναι ενας αριθμος ο οποιος κατά τη διάρκεια ενός κύκλου προσομοίωσης 
δειχνει ποσα  οχηματα εχουν περασει απο το τρεχον διοδιο και μια boolean μεταβλητη available που δειχνει αν ενα διοδιο ειναι 
διαθεσιμο ή οχι. O μετρητης vehicles_passed αρχικοποιειται με 0 και επαναφερεται στο 0 μετα απο καθε κυκλο προσομοιωσης.

Η εννοια της διαθεσιμοτητας:
Το καθε διοδιο αρχικα ειναι διαθεσιμο να περασει οχηματα. Εαν ενα διοδιο εχει ηδη εξυπηρετησει εναν αριθμο αυτοκινητων ισο 
με το transit_rate του διοδιου (vehicles_passed == transit_rate), τοτε το διοδιο γινεται μη διαθεσιμο και δεν μπορει να 
εξυπηρετησει αλλα αυτοκινητα για τον τρεχοντα κυκλο προσομοιωσης.

Υπαρχουν 2 accessors, is_available και is_empty.
Ο is_available επιστρέφει τον bool available, ενώ ο is_empty επιστρέφει 0 αν είναι άδειο το διόδιο.

Η συναρτηση pass_tolls εχει τυπο επιστροφης vehicle * και κανει την εξης δουλεια:
Αν το διοδιο δεν ειναι αδειο και ειναι διαθεσιμο παιρνει το πρωτο οχημα της λιστας, το διαγραφει απο τη λιστα, αυξανει το 
vehicles_passed και επιστρεφει το οχημα στην entrance::operate, αλλιώς επιστρέφει NULL (αν είναι και μη διαθέσιμο,
αλλάζει την τιμή της available).

Η συνάρτηση generate_vehicles, μέσω της rand, παίρνει τυχαία έναν αριθμό οχημάτων από 1 εως 10, δημιουργει τοσα οχηματα και
τοποθετεί μεσα στη λιστα του διοδιου.

Οι συναρτησεις check_availability και change_state ειναι ορισμενες ως pure virtual και οι υλοποιησεις τους εξαρτωνται απο το 
αν το διοδιο ειναι ηλεκτρονικο η με εισπρακτορα. Τις καναμε pure virtual διοτι χρησιμοποιουν το transit_rate το οποιο ειναι
διαφορετικο για καθε ειδος διοδιου.

Η change_state ελεγχει τη διαθεσιμοτητα του διοδιου, δηλαδη αν περασε η οχι απο αυτο το διοδιο ο max αριθμος οχηματων. Αν ναι 
(δηλαδη αν check_availability == 0), ο ρυθμος διελευσης αυξανεται κατα ενα για τον επομενο κυκλο προσομοίωσης, και αν οχι, ο
ρυθμος μειωνεται. Επειτα το vehicles_passed μηδενιζεται για τον επομενο κυκλο προσομοίωσης και το διοδιο ειναι πλεον παλι 
διαθεσιμο.

H check_availability ελεγχει εαν στον τρεχοντα κυκλο, το vehicles_passed εχει ξεπερασει η οχι τον max αριθμο οχημάτων που μπορουν
να διελθουν απο αυτο το διοδιο. Εαν εχει περασει ο max αριθμος οχηματων, τοτε το διοδιο γινεται μη διαθεσιμο.
-----------------------------------------------------------------------------------------------------------------------------


------------------------------------------Vehicle-------------------------------------------------------------------------------
Η κλαση Vehicle περιεχει μια bool μεταβλητη ready που δηλωνει την ετοιμοτητα του οχηματος, μια ακεραια ενδειξη που δειχνει σε ποιο
τμημα βρισκεται ανα πασα στιγμη το οχημα, μια ακεραια ενδειξη που δειχνει σε ποια εισοδο βρισκεται ανα πασα στιγμη το οχημα και μια 
ακεραια ενδειξη που δειχνει τον προορισμο του οχηματος. Αν η ενδειξη της εισοδου ειναι -1 σημαινει οτι το οχημα δεν βρισκεται σε καποια
εισοδο και αντίστοιχα αν η ενδειξη του τμηματος ειναι -1 σημαινει οτι το οχημα δεν βρισκεται σε καποιο τμημα ακομα, αλλα ειναι στα 
διοδια. H ενδειξη destination εαν πχ ειναι 5, σημαινει οτι οταν το οχημα θα φτασει στο τμημα 5, μολις τεθει σε ετοιμοτητα θα εξελθει
απο τον αυτοκινητοδρομο.

Οι μεθοδοι του vehicle ειναι κυριως accessors και mutators, δηλαδη set_ready, set_not_ready, get_ready, get_destination.

Η change_state_of_vehicle ενημερωνει τις ενδειξεις segment και entrance οταν ενα οχημα μεταβαινει απο ενα τμημα σε ενα αλλο η απο μια 
εισοδο σε ενα τμημα. Δεχεται ως ορισμα το segment_no του τμηματος στο οποιο πλεον θα βρισκεται.
-----------------------------------------------------------------------------------------------------------------------------

Σε ολες τις κλασεις περιεχονται συναρτήσεις εκτυπωσεως που μας βοηθησαν ιδιαιτερα στο debug και ειναι ειναι σχολιασμενες (δε μας πηγαινε 
η καρδια να τις σβησουμε :) καλη χονια ευτυχισμενο το νεο ετος!).



